type: edu
custom_name: stage3
files:
- name: build.gradle
  visible: true
  text: |
    plugins {
        id 'org.springframework.boot' version '2.2.2.RELEASE'
        id 'java'
    }

    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 11

    repositories {
        mavenCentral()
    }

    sourceSets.main.resources.srcDirs = ["src/resources"]

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        compile("org.springframework.boot:spring-boot-starter-web")
    }
  learner_created: false
- name: src/engine/WebQuizEngine.java
  visible: true
  text: |
    package engine;

    import org.springframework.boot.SpringApplication;
    import org.springframework.boot.autoconfigure.SpringBootApplication;

    @SpringBootApplication
    public class WebQuizEngine {

        public static void main(String[] args) {
            SpringApplication.run(WebQuizEngine.class, args);
        }

    }
  learner_created: false
- name: src/resources/application.properties
  visible: true
  text: |
    server.port=8889
    management.endpoints.web.exposure.include=*
    management.endpoint.shutdown.enabled=true
  learner_created: false
- name: test/tests/WebQuizEngineTest.java
  visible: false
  text: |
    package tests;

    import com.google.gson.JsonElement;
    import com.google.gson.JsonObject;
    import engine.WebQuizEngine;
    import org.hyperskill.hstest.dynamic.input.DynamicTesting;
    import org.hyperskill.hstest.dynamic.input.DynamicTestingMethod;
    import org.hyperskill.hstest.exception.outcomes.WrongAnswer;
    import org.hyperskill.hstest.mocks.web.request.HttpRequest;
    import org.hyperskill.hstest.mocks.web.response.HttpResponse;
    import org.hyperskill.hstest.stage.SpringTest;
    import org.hyperskill.hstest.testcase.CheckResult;

    import static org.hyperskill.hstest.common.JsonUtils.getJson;
    import static org.hyperskill.hstest.common.JsonUtils.getPrettyJson;
    import static org.hyperskill.hstest.testing.expect.Expectation.expect;
    import static org.hyperskill.hstest.testing.expect.json.JsonChecker.*;

    public class WebQuizEngineTest extends SpringTest {

        public WebQuizEngineTest() {
            super(WebQuizEngine.class);
        }

        static void checkStatusCode(HttpResponse resp, int status) {
            if (resp.getStatusCode() != status) {
                throw new WrongAnswer(
                    resp.getRequest().getMethod() + " " +
                        resp.getRequest().getLocalUri() +
                        " should respond with status code " + status + ", " +
                        "responded: " + resp.getStatusCode() + "\n\n" +
                        "Response body:\n\n" + resp.getContent()
                );
            }
        }

        private static String quiz1 =
            "{\n" +
                "  \"title\": \"The Java Logo\", \n" +
                "  \"text\": \"What is depicted on the Java logo?\",\n" +
                "  \"options\": [\"Robot\",\"Tea leaf\",\"Cup of coffee\",\"Bug\"],\n" +
                "  \"answer\": [2]\n" +
                "}";

        private static String quiz2 =
            "{\n" +
                "  \"title\": \"The Ultimate Question\",\n" +
                "  \"text\": \"What is the answer to the Ultimate Question of Life, the Universe and Everything?\",\n" +
                "  \"options\": [\"Everything goes right\",\"42\",\"2+2=4\",\"11011100\"],\n" +
                "  \"answer\": [1]\n" +
                "}";

        private static String quiz3 =
            "{\n" +
                "  \"title\": \"Math1\",\n" +
                "  \"text\": \"Which of the following is equal to 4?\",\n" +
                "  \"options\": [\"1+3\",\"2+2\",\"8-1\",\"1+5\"],\n" +
                "  \"answer\": [0,1]\n" +
                "}";

        private static String quiz4 =
            "{\n" +
                "  \"title\": \"Math2\",\n" +
                "  \"text\": \"Which of the following is equal to 4?\",\n" +
                "  \"options\": [\"1+1\",\"2+2\",\"8-1\",\"5-1\"],\n" +
                "  \"answer\": [1,3]\n" +
                "}";

        private static String quiz5 =
            "{\n" +
                "  \"title\": \"Math3\",\n" +
                "  \"text\": \"Which of the following is equal to 4?\",\n" +
                "  \"options\": [\"2*3\",\"5*8\",\"8*0\",\"1*5\"],\n" +
                "  \"answer\": []\n" +
                "}";

        private static String quiz6 =
            "{\n" +
                "  \"title\": \"Math4\",\n" +
                "  \"text\": \"Which of the following is equal to 4?\",\n" +
                "  \"options\": [\"2*3\",\"5*8\",\"8*0\",\"1*5\"]\n" +
                "}";

        private static String quiz7 =
            "{\n" +
                "  \"title\": \"Math5\",\n" +
                "  \"text\": \"Which of the following is equal to 4?\",\n" +
                "  \"options\": [\"2^2\",\"2+2\",\"2-2\",\"2*2\"],\n" +
                "  \"answer\": [0,1,3]\n" +
                "}";

        private static String[] quizzes = new String[] {
            quiz1, quiz2, quiz3, quiz4, quiz5, quiz6, quiz7
        };

        private static int[] quizIds = new int[] {
            0, 0, 0, 0, 0, 0, 0
        };

        private static String error400noTitle =
            "{\n" +
                "  \"text\": \"What is the answer to the Ultimate Question of Life, the Universe and Everything?\",\n" +
                "  \"options\": [\"Everything goes right\",\"42\",\"2+2=4\",\"11011100\"]\n" +
                "  \"answer\": [1]\n" +
                "}";

        private static String error400emptyTitle =
            "{\n" +
                "  \"title\": \"\",\n" +
                "  \"text\": \"What is the answer to the Ultimate Question of Life, the Universe and Everything?\",\n" +
                "  \"options\": [\"Everything goes right\",\"42\",\"2+2=4\",\"11011100\"]\n" +
                "  \"answer\": [1]\n" +
                "}";

        private static String error400noText =
            "{\n" +
                "  \"title\": \"123123123\",\n" +
                "  \"options\": [\"Everything goes right\",\"42\",\"2+2=4\",\"11011100\"]\n" +
                "  \"answer\": [1]\n" +
                "}";

        private static String error400emptyText =
            "{\n" +
                "  \"title\": \"The Ultimate Question\",\n" +
                "  \"text\": \"\",\n" +
                "  \"options\": [\"Everything goes right\",\"42\",\"2+2=4\",\"11011100\"]\n" +
                "  \"answer\": [1]\n" +
                "}";

        private static String error400noOptions =
            "{\n" +
                "  \"title\": \"The Ultimate Question\",\n" +
                "  \"text\": \"123123123\",\n" +
                "  \"answer\": [1]\n" +
                "}";

        private static String error400emptyOptions =
            "{\n" +
                "  \"title\": \"The Ultimate Question\",\n" +
                "  \"text\": \"What is the answer to the Ultimate Question of Life, the Universe and Everything?\",\n" +
                "  \"options\": [ ]\n" +
                "  \"answer\": [ ]\n" +
                "}";

        private static String error400oneOption =
            "{\n" +
                "  \"title\": \"The Ultimate Question\",\n" +
                "  \"text\": \"What is the answer to the Ultimate Question of Life, the Universe and Everything?\",\n" +
                "  \"options\": [\"Everything goes right\"]\n" +
                "  \"answer\": [0]\n" +
                "}";

        @DynamicTestingMethod
        DynamicTesting[] dt = new DynamicTesting[] {
            () -> testAllQuizzes(0),

            () -> testCreateQuiz(0),
            () -> testQuizExists(0),
            () -> testQuizNotExists(0),

            () -> testAllQuizzes(1),

            () -> testCreateQuiz(1),
            () -> testQuizExists(1),
            () -> testQuizNotExists(1),

            () -> testAllQuizzes(2),

            () -> checkQuizSuccess(quizIds[0], "[0]", false),
            () -> checkQuizSuccess(quizIds[0], "[1]", false),
            () -> checkQuizSuccess(quizIds[0], "[2]", true),
            () -> checkQuizSuccess(quizIds[0], "[3]", false),

            () -> checkQuizSuccess(quizIds[1], "[0]", false),
            () -> checkQuizSuccess(quizIds[1], "[1]", true),
            () -> checkQuizSuccess(quizIds[1], "[2]", false),
            () -> checkQuizSuccess(quizIds[1], "[3]", false),

            () -> addIncorrectQuiz(error400noTitle),
            () -> addIncorrectQuiz(error400emptyTitle),
            () -> addIncorrectQuiz(error400noText),
            () -> addIncorrectQuiz(error400emptyText),
            () -> addIncorrectQuiz(error400noOptions),
            () -> addIncorrectQuiz(error400emptyOptions),
            () -> addIncorrectQuiz(error400oneOption),

            () -> testCreateQuiz(2),
            () -> testQuizExists(2),
            () -> testQuizNotExists(2),
            () -> checkQuizSuccess(quizIds[2], "[]", false),
            () -> checkQuizSuccess(quizIds[2], "[0]", false),
            () -> checkQuizSuccess(quizIds[2], "[1]", false),
            () -> checkQuizSuccess(quizIds[2], "[2]", false),
            () -> checkQuizSuccess(quizIds[2], "[3]", false),
            () -> checkQuizSuccess(quizIds[2], "[0,1]", true),
            () -> checkQuizSuccess(quizIds[2], "[0,2]", false),
            () -> checkQuizSuccess(quizIds[2], "[0,3]", false),
            () -> checkQuizSuccess(quizIds[2], "[1,2]", false),
            () -> checkQuizSuccess(quizIds[2], "[1,3]", false),
            () -> checkQuizSuccess(quizIds[2], "[2,3]", false),
            () -> checkQuizSuccess(quizIds[2], "[0,1,2]", false),
            () -> checkQuizSuccess(quizIds[2], "[0,1,3]", false),
            () -> checkQuizSuccess(quizIds[2], "[1,2,3]", false),
            () -> checkQuizSuccess(quizIds[2], "[0,1,2,3]", false),

            () -> testCreateQuiz(3),
            () -> testQuizExists(3),
            () -> testQuizNotExists(3),
            () -> checkQuizSuccess(quizIds[3], "[]", false),
            () -> checkQuizSuccess(quizIds[3], "[0]", false),
            () -> checkQuizSuccess(quizIds[3], "[1]", false),
            () -> checkQuizSuccess(quizIds[3], "[2]", false),
            () -> checkQuizSuccess(quizIds[3], "[3]", false),
            () -> checkQuizSuccess(quizIds[3], "[0,1]", false),
            () -> checkQuizSuccess(quizIds[3], "[0,2]", false),
            () -> checkQuizSuccess(quizIds[3], "[0,3]", false),
            () -> checkQuizSuccess(quizIds[3], "[1,2]", false),
            () -> checkQuizSuccess(quizIds[3], "[1,3]", true),
            () -> checkQuizSuccess(quizIds[3], "[2,3]", false),
            () -> checkQuizSuccess(quizIds[3], "[0,1,2]", false),
            () -> checkQuizSuccess(quizIds[3], "[0,1,3]", false),
            () -> checkQuizSuccess(quizIds[3], "[1,2,3]", false),
            () -> checkQuizSuccess(quizIds[3], "[0,1,2,3]", false),

            () -> testCreateQuiz(4),
            () -> testQuizExists(4),
            () -> testQuizNotExists(4),
            () -> checkQuizSuccess(quizIds[4], "[]", true),
            () -> checkQuizSuccess(quizIds[4], "[0]", false),
            () -> checkQuizSuccess(quizIds[4], "[1]", false),
            () -> checkQuizSuccess(quizIds[4], "[2]", false),
            () -> checkQuizSuccess(quizIds[4], "[3]", false),
            () -> checkQuizSuccess(quizIds[4], "[0,1]", false),
            () -> checkQuizSuccess(quizIds[4], "[0,2]", false),
            () -> checkQuizSuccess(quizIds[4], "[0,3]", false),
            () -> checkQuizSuccess(quizIds[4], "[1,2]", false),
            () -> checkQuizSuccess(quizIds[4], "[1,3]", false),
            () -> checkQuizSuccess(quizIds[4], "[2,3]", false),
            () -> checkQuizSuccess(quizIds[4], "[0,1,2]", false),
            () -> checkQuizSuccess(quizIds[4], "[0,1,3]", false),
            () -> checkQuizSuccess(quizIds[4], "[1,2,3]", false),
            () -> checkQuizSuccess(quizIds[4], "[0,1,2,3]", false),

            () -> testCreateQuiz(5),
            () -> testQuizExists(5),
            () -> testQuizNotExists(5),
            () -> checkQuizSuccess(quizIds[5], "[]", true),
            () -> checkQuizSuccess(quizIds[5], "[0]", false),
            () -> checkQuizSuccess(quizIds[5], "[1]", false),
            () -> checkQuizSuccess(quizIds[5], "[2]", false),
            () -> checkQuizSuccess(quizIds[5], "[3]", false),
            () -> checkQuizSuccess(quizIds[5], "[0,1]", false),
            () -> checkQuizSuccess(quizIds[5], "[0,2]", false),
            () -> checkQuizSuccess(quizIds[5], "[0,3]", false),
            () -> checkQuizSuccess(quizIds[5], "[1,2]", false),
            () -> checkQuizSuccess(quizIds[5], "[1,3]", false),
            () -> checkQuizSuccess(quizIds[5], "[2,3]", false),
            () -> checkQuizSuccess(quizIds[5], "[0,1,2]", false),
            () -> checkQuizSuccess(quizIds[5], "[0,1,3]", false),
            () -> checkQuizSuccess(quizIds[5], "[1,2,3]", false),
            () -> checkQuizSuccess(quizIds[5], "[0,1,2,3]", false),

            () -> testCreateQuiz(6),
            () -> testQuizExists(6),
            () -> testQuizNotExists(6),
            () -> checkQuizSuccess(quizIds[6], "[]", false),
            () -> checkQuizSuccess(quizIds[6], "[0]", false),
            () -> checkQuizSuccess(quizIds[6], "[1]", false),
            () -> checkQuizSuccess(quizIds[6], "[2]", false),
            () -> checkQuizSuccess(quizIds[6], "[3]", false),
            () -> checkQuizSuccess(quizIds[6], "[0,1]", false),
            () -> checkQuizSuccess(quizIds[6], "[0,2]", false),
            () -> checkQuizSuccess(quizIds[6], "[0,3]", false),
            () -> checkQuizSuccess(quizIds[6], "[1,2]", false),
            () -> checkQuizSuccess(quizIds[6], "[1,3]", false),
            () -> checkQuizSuccess(quizIds[6], "[2,3]", false),
            () -> checkQuizSuccess(quizIds[6], "[0,1,2]", false),
            () -> checkQuizSuccess(quizIds[6], "[0,1,3]", true),
            () -> checkQuizSuccess(quizIds[6], "[1,2,3]", false),
            () -> checkQuizSuccess(quizIds[6], "[0,1,2,3]", false),
        };

        private CheckResult testCreateQuiz(int quizNum) {
            String url = "/api/quizzes";
            HttpResponse resp = post(url, quizzes[quizNum]).send();
            checkStatusCode(resp, 200);

            expect(resp.getContent()).asJson().check(
                isObject()
                    .value("id", isInteger(i -> {
                        quizIds[quizNum] = i;
                        return true;
                    }))
                    .anyOtherValues()
            );

            return CheckResult.correct();
        }

        private CheckResult testQuizExists(int quizNum) {

            int quizId = quizIds[quizNum];
            String quiz = quizzes[quizNum];

            String url = "/api/quizzes/" + quizId;
            HttpResponse resp = get(url).send();
            checkStatusCode(resp, 200);

            JsonObject rightQuiz = getJson(quiz).getAsJsonObject();
            rightQuiz.remove("answer");
            rightQuiz.addProperty("id", quizId);

            expect(getPrettyJson(rightQuiz)).asJson().check(
                isObject()
                    .value("id", quizId)
                    .value("title", isString())
                    .value("text", isString())
                    .value("options", isArray(any()))
            );

            JsonElement json = resp.getJson();

            CheckResult wrongResponse = CheckResult.wrong(
                "The quiz sent to the program looked like this:\n" +
                    getPrettyJson(rightQuiz) + "\n\n" +
                    "But the received quiz looks like that:\n" +
                    getPrettyJson(json)
            );

            if (!json.isJsonObject()) {
                return wrongResponse;
            }

            JsonObject obj = json.getAsJsonObject();

            if (!rightQuiz.equals(obj)) {
                return wrongResponse;
            }

            return CheckResult.correct();
        }

        private CheckResult testQuizNotExists(int quizNum) {
            int quizId = quizIds[quizNum];

            String url = "/api/quizzes/" + (quizId + 125);
            HttpResponse resp = get(url).send();
            checkStatusCode(resp, 404);

            return CheckResult.correct();
        }

        private CheckResult testAllQuizzes(int count) {
            String url = "/api/quizzes";
            HttpResponse resp = get(url).send();
            checkStatusCode(resp, 200);

            expect(resp.getContent()).asJson().check(
                isArray(count, isObject().anyOtherValues())
            );

            return CheckResult.correct();
        }

        private CheckResult checkQuizSuccess(int quizNum, String answerSent, boolean shouldResponse) {
            String url = "/api/quizzes/" + quizNum + "/solve";

            HttpRequest req = post(url, "{" + " \"answer\" : " + answerSent + "}");
            HttpResponse resp = req.send();
            checkStatusCode(resp, 200);

            expect(resp.getContent()).asJson().check(
                isObject()
                    .value("success", shouldResponse)
                    .value("feedback", isString())
            );

            return CheckResult.correct();
        }

        private CheckResult addIncorrectQuiz(String quiz) {
            String url = "/api/quizzes";
            HttpResponse resp = post(url, quiz).send();
            checkStatusCode(resp, 400);
            return CheckResult.correct();
        }
    }
  learner_created: false
- name: src/engine/controllers/QuizController.java
  visible: true
  text: |
    package engine.controllers;

    import com.fasterxml.jackson.annotation.JsonIgnore;
    import engine.Quiz;
    import engine.QuizNotFoundException;
    import org.apache.catalina.authenticator.SingleSignOnListener;
    import org.springframework.boot.autoconfigure.SpringBootApplication;
    import org.springframework.web.bind.annotation.*;
    import engine.Solving;

    import java.util.ArrayList;

    @RestController
    @RequestMapping("/api")
    public class QuizController {
        private final ArrayList<Quiz> quizzes = new ArrayList<>();
        private int id = 1;

        @PostMapping(value = "/quizzes", consumes = "application/json")
        public Quiz createQuiz(@RequestBody Quiz quiz) {
            quiz.setId(id);
            id++;
            quizzes.add(quiz);
            return quiz;
        }
        @GetMapping("/quizzes/{id}")
        public Quiz getQuiz(@PathVariable int id) throws QuizNotFoundException {
            Quiz resultQuiz = null;
            for(int i = 0;i < quizzes.size();i++) {
                if(quizzes.get(i).getId() == id) resultQuiz = quizzes.get(i);
            }
            if(resultQuiz == null) throw new QuizNotFoundException();
            return resultQuiz;
        }
        @GetMapping("/quizzes")
        public ArrayList<Quiz> getQuizzes() {
            return quizzes;
        }
        @PostMapping("/quizzes/{id}/solve")
        public Solving solveQuiz(@PathVariable int id, @RequestParam int answer) throws QuizNotFoundException {
            boolean success = false;
            Quiz quiz = getQuiz(id);
            String feedback = "Wrong answer! Please, try again.";
            if(answer == quiz.getAnswer()) {
                success = true;
                feedback = "Congratulations, you're right!";
            }
            return new Solving(success, feedback);
        }
    }
  learner_created: true
- name: src/engine/entity/Quiz.java
  visible: true
  learner_created: true
- name: src/engine/entity/Answer.java
  visible: true
  learner_created: true
- name: src/engine/entity/Solving.java
  visible: true
  learner_created: true
- name: src/engine/entity/QuizNotFoundException.java
  visible: true
  learner_created: true
- name: src/engine/service/Service.java
  visible: true
  learner_created: true
- name: src/engine/repository/QuizRepository.java
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/91/stages/506/implement#comment
status: Failed
feedback:
  message: "Wrong answer in test #82\n\nPOST /api/quizzes/5/solve should respond with\
    \ status code 200, responded: 500\n\nResponse body:\n\n{&quot;timestamp&quot;:&quot;2021-06-12T08:01:52.019+0000&quot;,&quot;status&quot;:500,&quot;error&quot;:&quot;Internal\
    \ Server Error&quot;,&quot;message&quot;:&quot;No message available&quot;,&quot;path&quot;:&quot;/api/quizzes/5/solve&quot;}\n\
    \nPlease find below the output of your program during this failed test.\n\n---\n\
    \n\n  .   ____          _            __ _ _\n /\\\\ / ___&#39;_ __ _ _(_)_ __\
    \  __ _ \\ \\ \\ \\\n( ( )\\___ | &#39;_ | &#39;_| | &#39;_ \\/ _` | \\ \\ \\\
    \ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  &#39;  |____| .__|_| |_|_|\
    \ |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot\
    \ ::        (v2.2.2.RELEASE)\n\n2021-06-12 11:01:43.569  INFO 5708 --- [    Test\
    \ worker] engine.WebQuizEngine                     : Starting WebQuizEngine on\
    \ DESKTOP-U91GHR6 with PID 5708 (started by girsa in E:\\Web Quiz Engine\\Web\
    \ Quiz Engine\\task)\n2021-06-12 11:01:43.587  INFO 5708 --- [    Test worker]\
    \ engine.WebQuizEngine                     : No active profile set, falling back\
    \ to default profiles: default\n2021-06-12 11:01:46.638  INFO 5708 --- [    Test\
    \ worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s):\
    \ 8889 (http)\n2021-06-12 11:01:46.665  INFO 5708 --- [    Test worker] o.apache.catalina.core.StandardService\
    \   : Starting service [Tomcat]\n2021-06-12 11:01:46.666  INFO 5708 --- [    Test\
    \ worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine:\
    \ [Apache Tomcat/9.0.29]\n2021-06-12 11:01:46.872  INFO 5708 --- [    Test worker]\
    \ o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\n\
    2021-06-12 11:01:46.873  INFO 5708 --- [    Test worker] o.s.web.context.ContextLoader\
    \            : Root WebApplicationContext: initialization completed in 3168 ms\n\
    2021-06-12 11:01:47.962  INFO 5708 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor\
    \  : Initializing ExecutorService &#39;applicationTaskExecutor&#39;\n2021-06-12\
    \ 11:01:48.644  INFO 5708 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver\
    \      : Exposing 14 endpoint(s) beneath base path &#39;/actuator&#39;\n2021-06-12\
    \ 11:01:48.864  INFO 5708 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer\
    \  : Tomcat started on port(s): 8889 (http) with context path &#39;&#39;\n2021-06-12\
    \ 11:01:48.886  INFO 5708 --- [    Test worker] engine.WebQuizEngine         \
    \            : Started WebQuizEngine in 6.23 seconds (JVM running for 8.081)\n\
    2021-06-12 11:01:49.774  INFO 5708 --- [nio-8889-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]\
    \       : Initializing Spring DispatcherServlet &#39;dispatcherServlet&#39;\n\
    2021-06-12 11:01:49.776  INFO 5708 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet\
    \        : Initializing Servlet &#39;dispatcherServlet&#39;\n2021-06-12 11:01:49.794\
    \  INFO 5708 --- [nio-8889-exec-1] o.s.web.servlet.DispatcherServlet        :\
    \ Completed initialization in 17 ms\nRight answers: [2 ]\nUser answers: [0 ]\n\
    false|Wrong answer! Please, try again.\nRight answers: [2 ]\nUser answers: [1\
    \ ]\nfalse|Wrong answer! Please, try again.\nRight answers: [2 ]\nUser answers:\
    \ [2 ]\ntrue|Congratulations, you&#39;re right!\nRight answers: [2 ]\nUser answers:\
    \ [3 ]\nfalse|Wrong answer! Please, try again.\nRight answers: [1 ]\nUser answers:\
    \ [0 ]\nfalse|Wrong answer! Please, try again.\nRight answers: [1 ]\nUser answers:\
    \ [1 ]\ntrue|Congratulations, you&#39;re right!\nRight answers: [1 ]\nUser answers:\
    \ [2 ]\nfalse|Wrong answer! Please, try again.\nRight answers: [1 ]\nUser answers:\
    \ [3 ]\nfalse|Wrong answer! Please, try again.\n2021-06-12 11:01:51.002  WARN\
    \ 5708 --- [nio-8889-exec-8] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved\
    \ [org.springframework.http.converter.HttpMessageNotReadableException: JSON parse\
    \ error: Unexpected character (&#39;&quot;&#39; (code 34)): was expecting comma\
    \ to separate Object entries; nested exception is com.fasterxml.jackson.core.JsonParseException:\
    \ Unexpected character (&#39;&quot;&#39; (code 34)): was expecting comma to separate\
    \ Object entries\n at [Source: (PushbackInputStream); line: 4, column: 4]]\n2021-06-12\
    \ 11:01:51.017  WARN 5708 --- [nio-8889-exec-9] .w.s.m.s.DefaultHandlerExceptionResolver\
    \ : Resolved [org.springframework.http.converter.HttpMessageNotReadableException:\
    \ JSON parse error: Unexpected character (&#39;&quot;&#39; (code 34)): was expecting\
    \ comma to separate Object entries; nested exception is com.fasterxml.jackson.core.JsonParseException:\
    \ Unexpected character (&#39;&quot;&#39; (code 34)): was expecting comma to separate\
    \ Object entries\n at [Source: (PushbackInputStream); line: 5, column: 4]]\n2021-06-12\
    \ 11:01:51.029  WARN 5708 --- [nio-8889-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver\
    \ : Resolved [org.springframework.http.converter.HttpMessageNotReadableException:\
    \ JSON parse error: Unexpected character (&#39;&quot;&#39; (code 34)): was expecting\
    \ comma to separate Object entries; nested exception is com.fasterxml.jackson.core.JsonParseException:\
    \ Unexpected character (&#39;&quot;&#39; (code 34)): was expecting comma to separate\
    \ Object entries\n at [Source: (PushbackInputStream); line: 4, column: 4]]\n2021-06-12\
    \ 11:01:51.043  WARN 5708 --- [nio-8889-exec-1] .w.s.m.s.DefaultHandlerExceptionResolver\
    \ : Resolved [org.springframework.http.converter.HttpMessageNotReadableException:\
    \ JSON parse error: Unexpected character (&#39;&quot;&#39; (code 34)): was expecting\
    \ comma to separate Object entries; nested exception is com.fasterxml.jackson.core.JsonParseException:\
    \ Unexpected character (&#39;&quot;&#39; (code 34)): was expecting comma to separate\
    \ Object entries\n at [Source: (PushbackInputStream); line: 5, column: 4]]\n2021-06-12\
    \ 11:01:51.114  WARN 5708 --- [nio-8889-exec-3] .w.s.m.s.DefaultHandlerExceptionResolver\
    \ : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation\
    \ failed for argument [0] in public engine.entity.Quiz engine.controllers.QuizController.createQuiz(engine.entity.Quiz):\
    \ [Field error in object &#39;quiz&#39; on field &#39;options&#39;: rejected value\
    \ [null]; codes [NotNull.quiz.options,NotNull.options,NotNull.[Ljava.lang.String;,NotNull];\
    \ arguments [org.springframework.context.support.DefaultMessageSourceResolvable:\
    \ codes [quiz.options,options]; arguments []; default message [options]]; default\
    \ message [must not be null]] ]\n2021-06-12 11:01:51.157  WARN 5708 --- [io-8889-exec-10]\
    \ .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotReadableException:\
    \ JSON parse error: Unexpected character (&#39;&quot;&#39; (code 34)): was expecting\
    \ comma to separate Object entries; nested exception is com.fasterxml.jackson.core.JsonParseException:\
    \ Unexpected character (&#39;&quot;&#39; (code 34)): was expecting comma to separate\
    \ Object entries\n at [Source: (PushbackInputStream); line: 5, column: 4]]\n2021-06-12\
    \ 11:01:51.170  WARN 5708 --- [nio-8889-exec-7] .w.s.m.s.DefaultHandlerExceptionResolver\
    \ : Resolved [org.springframework.http.converter.HttpMessageNotReadableException:\
    \ JSON parse error: Unexpected character (&#39;&quot;&#39; (code 34)): was expecting\
    \ comma to separate Object entries; nested exception is com.fasterxml.jackson.core.JsonParseException:\
    \ Unexpected character (&#39;&quot;&#39; (code 34)): was expecting comma to separate\
    \ Object entries\n at [Source: (PushbackInputStream); line: 5, column: 4]]\nRight\
    \ answers: [0 1 ]\nUser answers: []\nfalse|Wrong answer! Please, try again.\n\
    Right answers: [0 1 ]\nUser answers: [0 ]\nfalse|Wrong answer! Please, try again.\n\
    Right answers: [0 1 ]\nUser answers: [1 ]\nfalse|Wrong answer! Please, try again.\n\
    Right answers: [0 1 ]\nUser answers: [2 ]\nfalse|Wrong answer! Please, try again.\n\
    Right answers: [0 1 ]\nUser answers: [3 ]\nfalse|Wrong answer! Please, try again.\n\
    Right answers: [0 1 ]\nUser answers: [0 1 ]\ntrue|Congratulations, you&#39;re\
    \ right!\nRight answers: [0 1 ]\nUser answers: [0 2 ]\nfalse|Wrong answer! Please,\
    \ try again.\nRight answers: [0 1 ]\nUser answers: [0 3 ]\nfalse|Wrong answer!\
    \ Please, try again.\nRight answers: [0 1 ]\nUser answers: [1 2 ]\nfalse|Wrong\
    \ answer! Please, try again.\nRight answers: [0 1 ]\nUser answers: [1 3 ]\nfalse|Wrong\
    \ answer! Please, try again.\nRight answers: [0 1 ]\nUser answers: [2 3 ]\nfalse|Wrong\
    \ answer! Please, try again.\nRight answers: [0 1 ]\nUser answers: [0 1 2 ]\n\
    false|Wrong answer! Please, try again.\nRight answers: [0 1 ]\nUser answers: [0\
    \ 1 3 ]\nfalse|Wrong answer! Please, try again.\nRight answers: [0 1 ]\nUser answers:\
    \ [1 2 3 ]\nfalse|Wrong answer! Please, try again.\nRight answers: [0 1 ]\nUser\
    \ answers: [0 1 2 3 ]\nfalse|Wrong answer! Please, try again.\nRight answers:\
    \ [1 3 ]\nUser answers: []\nfalse|Wrong answer! Please, try again.\nRight answers:\
    \ [1 3 ]\nUser answers: [0 ]\nfalse|Wrong answer! Please, try again.\nRight answers:\
    \ [1 3 ]\nUser answers: [1 ]\nfalse|Wrong answer! Please, try again.\nRight answers:\
    \ [1 3 ]\nUser answers: [2 ]\nfalse|Wrong answer! Please, try again.\nRight answers:\
    \ [1 3 ]\nUser answers: [3 ]\nfalse|Wrong answer! Please, try again.\nRight answers:\
    \ [1 3 ]\nUser answers: [0 1 ]\nfalse|Wrong answer! Please, try again.\nRight\
    \ answers: [1 3 ]\nUser answers: [0 2 ]\nfalse|Wrong answer! Please, try again.\n\
    Right answers: [1 3 ]\nUser answers: [0 3 ]\nfalse|Wrong answer! Please, try again.\n\
    Right answers: [1 3 ]\nUser answers: [1 2 ]\nfalse|Wrong answer! Please, try again.\n\
    Right answers: [1 3 ]\nUser answers: [1 3 ]\ntrue|Congratulations, you&#39;re\
    \ right!\nRight answers: [1 3 ]\nUser answers: [2 3 ]\nfalse|Wrong answer! Please,\
    \ try again.\nRight answers: [1 3 ]\nUser answers: [0 1 2 ]\nfalse|Wrong answer!\
    \ Please, try again.\nRight answers: [1 3 ]\nUser answers: [0 1 3 ]\nfalse|Wrong\
    \ answer! Please, try again.\nRight answers: [1 3 ]\nUser answers: [1 2 3 ]\n\
    false|Wrong answer! Please, try again.\nRight answers: [1 3 ]\nUser answers: [0\
    \ 1 2 3 ]\nfalse|Wrong answer! Please, try again.\nRight answers: []\nUser answers:\
    \ []\ntrue|Congratulations, you&#39;re right!\nRight answers: []\nUser answers:\
    \ [0 ]\nfalse|Wrong answer! Please, try again.\nRight answers: []\nUser answers:\
    \ [1 ]\nfalse|Wrong answer! Please, try again.\nRight answers: []\nUser answers:\
    \ [2 ]\nfalse|Wrong answer! Please, try again.\nRight answers: []\nUser answers:\
    \ [3 ]\nfalse|Wrong answer! Please, try again.\nRight answers: []\nUser answers:\
    \ [0 1 ]\nfalse|Wrong answer! Please, try again.\nRight answers: []\nUser answers:\
    \ [0 2 ]\nfalse|Wrong answer! Please, try again.\nRight answers: []\nUser answers:\
    \ [0 3 ]\nfalse|Wrong answer! Please, try again.\nRight answers: []\nUser answers:\
    \ [1 2 ]\nfalse|Wrong answer! Please, try again.\nRight answers: []\nUser answers:\
    \ [1 3 ]\nfalse|Wrong answer! Please, try again.\nRight answers: []\nUser answers:\
    \ [2 3 ]\nfalse|Wrong answer! Please, try again.\nRight answers: []\nUser answers:\
    \ [0 1 2 ]\nfalse|Wrong answer! Please, try again.\nRight answers: []\nUser answers:\
    \ [0 1 3 ]\nfalse|Wrong answer! Please, try again.\nRight answers: []\nUser answers:\
    \ [1 2 3 ]\nfalse|Wrong answer! Please, try again.\nRight answers: []\nUser answers:\
    \ [0 1 2 3 ]\nfalse|Wrong answer! Please, try again.\nRight answers: [2021-06-12\
    \ 11:01:52.002 ERROR 5708 --- [nio-8889-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]\
    \    : Servlet.service() for servlet [dispatcherServlet] in context with path\
    \ [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException]\
    \ with root cause\n\njava.lang.NullPointerException: null\n\tat engine.service.Service.printArray(Service.java:65)\
    \ ~[main/:na]\n\tat engine.service.Service.solveQuiz(Service.java:40) ~[main/:na]\n\
    \tat engine.controllers.QuizController.solveQuiz(QuizController.java:49) ~[main/:na]\n\
    \tat engine.controllers.QuizController$$FastClassBySpringCGLIB$$d9b92594.invoke(&lt;generated&gt;)\
    \ ~[main/:na]\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\
    \ ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)\
    \ ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\
    \ ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)\
    \ ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:120)\
    \ ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\
    \ ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)\
    \ ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)\
    \ ~[spring-aop-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat engine.controllers.QuizController$$EnhancerBySpringCGLIB$$a51a948f.solveQuiz(&lt;generated&gt;)\
    \ ~[main/:na]\n\tat jdk.internal.reflect.GeneratedMethodAccessor40.invoke(Unknown\
    \ Source) ~[na:na]\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\
    \ ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\n\
    \tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\
    \ ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\
    \ ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)\
    \ ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)\
    \ ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)\
    \ ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\
    \ ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)\
    \ ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)\
    \ ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\
    \ ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\
    \ ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:660)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\
    \ ~[spring-webmvc-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat jdk.internal.reflect.GeneratedMethodAccessor36.invoke(Unknown\
    \ Source) ~[na:na]\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\
    \ ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\n\
    \tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:282) ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\
    \tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:279) ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\
    \tat java.base/java.security.AccessController.doPrivileged(Native Method) ~[na:na]\n\
    \tat java.base/javax.security.auth.Subject.doAsPrivileged(Subject.java:550) ~[na:na]\n\
    \tat org.apache.catalina.security.SecurityUtil.execute(SecurityUtil.java:314)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:170)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:225)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain.access$000(ApplicationFilterChain.java:47)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:149)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:145)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat java.base/java.security.AccessController.doPrivileged(Native\
    \ Method) ~[na:na]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\
    \ ~[tomcat-embed-websocket-9.0.29.jar:9.0.29]\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown\
    \ Source) ~[na:na]\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\
    \ ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\n\
    \tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:282) ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\
    \tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:279) ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\
    \tat java.base/java.security.AccessController.doPrivileged(Native Method) ~[na:na]\n\
    \tat java.base/javax.security.auth.Subject.doAsPrivileged(Subject.java:550) ~[na:na]\n\
    \tat org.apache.catalina.security.SecurityUtil.execute(SecurityUtil.java:314)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:253)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:191)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain.access$000(ApplicationFilterChain.java:47)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:149)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:145)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat java.base/java.security.AccessController.doPrivileged(Native\
    \ Method) ~[na:na]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\
    \ ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\
    \ ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown\
    \ Source) ~[na:na]\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\
    \ ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\n\
    \tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:282) ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\
    \tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:279) ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\
    \tat java.base/java.security.AccessController.doPrivileged(Native Method) ~[na:na]\n\
    \tat java.base/javax.security.auth.Subject.doAsPrivileged(Subject.java:550) ~[na:na]\n\
    \tat org.apache.catalina.security.SecurityUtil.execute(SecurityUtil.java:314)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:253)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:191)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain.access$000(ApplicationFilterChain.java:47)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:149)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:145)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat java.base/java.security.AccessController.doPrivileged(Native\
    \ Method) ~[na:na]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\
    \ ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\
    \ ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown\
    \ Source) ~[na:na]\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\
    \ ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\n\
    \tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:282) ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\
    \tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:279) ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\
    \tat java.base/java.security.AccessController.doPrivileged(Native Method) ~[na:na]\n\
    \tat java.base/javax.security.auth.Subject.doAsPrivileged(Subject.java:550) ~[na:na]\n\
    \tat org.apache.catalina.security.SecurityUtil.execute(SecurityUtil.java:314)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:253)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:191)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain.access$000(ApplicationFilterChain.java:47)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:149)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:145)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat java.base/java.security.AccessController.doPrivileged(Native\
    \ Method) ~[na:na]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)\
    \ ~[spring-boot-actuator-2.2.2.RELEASE.jar:2.2.2.RELEASE]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\
    \ ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown\
    \ Source) ~[na:na]\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\
    \ ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\n\
    \tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:282) ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\
    \tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:279) ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\
    \tat java.base/java.security.AccessController.doPrivileged(Native Method) ~[na:na]\n\
    \tat java.base/javax.security.auth.Subject.doAsPrivileged(Subject.java:550) ~[na:na]\n\
    \tat org.apache.catalina.security.SecurityUtil.execute(SecurityUtil.java:314)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:253)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:191)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain.access$000(ApplicationFilterChain.java:47)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:149)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:145)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat java.base/java.security.AccessController.doPrivileged(Native\
    \ Method) ~[na:na]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\
    \ ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\
    \ ~[spring-web-5.2.2.RELEASE.jar:5.2.2.RELEASE]\n\tat jdk.internal.reflect.GeneratedMethodAccessor35.invoke(Unknown\
    \ Source) ~[na:na]\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\
    \ ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\n\
    \tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:282) ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\
    \tat org.apache.catalina.security.SecurityUtil$1.run(SecurityUtil.java:279) ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\
    \tat java.base/java.security.AccessController.doPrivileged(Native Method) ~[na:na]\n\
    \tat java.base/javax.security.auth.Subject.doAsPrivileged(Subject.java:550) ~[na:na]\n\
    \tat org.apache.catalina.security.SecurityUtil.execute(SecurityUtil.java:314)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:253)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:191)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain.access$000(ApplicationFilterChain.java:47)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:149)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:145)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat java.base/java.security.AccessController.doPrivileged(Native\
    \ Method) ~[na:na]\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\
    \ ~[na:na]\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\
    \ ~[na:na]\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\
    \ ~[tomcat-embed-core-9.0.29.jar:9.0.29]\n\tat java.base/java.lang.Thread.run(Thread.java:834)\
    \ ~[na:na]"
  time: Sat, 12 Jun 2021 08:01:52 UTC
record: -1
